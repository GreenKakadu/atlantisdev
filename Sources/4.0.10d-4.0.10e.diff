Index: CHANGELOG
===================================================================
RCS file: /home/cvs/atlantis/CHANGELOG,v
retrieving revision 1.106.2.5
diff -u -r1.106.2.5 CHANGELOG
--- CHANGELOG	19 Oct 2002 04:03:41 -0000	1.106.2.5
+++ CHANGELOG	13 Nov 2002 08:25:06 -0000
@@ -460,12 +460,12 @@
       the Lacandon spells fully implementable.
    -- The CLEAR_SKIES castable at range stuff is now doable by setting the
       rangeIndex on S_CLEAR_SKIES to RANGE_CLEAR_SKIES and then modifying
-	  the values for RANGE_CLEAR_SKIES.
+      the values for RANGE_CLEAR_SKIES.
    -- Fixed planar scaling so that all levels were scaled to what they should
       be, not always *2 for levels other than surface.
    -- Fixed a bug which caused a crash in the orders checker if you had a
       bogus form order and did NOT have either an ENDFORM of #END order in
-	  your orderset after that bogus form.
+      your orderset after that bogus form.
    -- Fixed a bug which caused a crash if you built a road in a direction
       where there was no adjacent hex.
    -- Fixed a bug in unit drowning when they left a boat.
@@ -474,10 +474,10 @@
    -- Fixed a bug in display of info about shield effects generated by items.
    -- Fixed bug in forlist during assassination which caused assassinations
       to stop if the person you assassinated was directly below you in the
-	  unit list in the object.
+      unit list in the object.
    -- Tom Alsen added code to Blitzgame allowing monsters to regenerate hits
       during combat.  I have merged this code into the main base under a
-	  configuration option.
+      configuration option.
    -- Patch for multiple types of taxing behaviour controlling who is
       allowed to tax.  Patch submitted by Stephen Baillie.
    -- Fixed a bug in BUY/SELL where two buys or sells of the same item would
@@ -503,8 +503,8 @@
    -- Cleaned up a small section of rules for clarity.
    -- Fixed up a bug with two sell orders for the same item which did
       insufficient checking that you could sell both quantities.  This
-	  bug existed for a while but never showed up because of the bug
-	  with multiple sells of the same item which I fixed a few weeks ago.
+      bug existed for a while but never showed up because of the bug
+      with multiple sells of the same item which I fixed a few weeks ago.
    -- Changed MOVE and SAIL so that if the unit runs out of movement
       points, the remaining moves are added to the front of the TURN
       queue.  This allows caravans using @TURN to work properly despite
@@ -532,7 +532,7 @@
       Made food buyable in all town markets.
    -- Made it so that shield items didn't need to be PREPARED in a game with
       USE_PREPARE_COMMAND set and verified that non-prepared items got
-	  returned.
+      returned.
    -- Fixed display of hits/regen to show unit number and creature in unit
       which took the damage.
    -- Fixed bug in magic studying in protected buildings under LIMITED_MAGES
@@ -578,3 +578,22 @@
    -- Fixed misleading damage messages on monsters.
    -- Fixed a bug where gluttony became a sin (under skill starvation).
    -- Fixed rounding error in pillaging 
+
+Changes from 4.0.10d -> 4.0.10e
+--------------------------------------------------
+   -- Fixed missing parenthesis in calculating rename cost of cities.
+   -- Fixed setup error in city markets (wasn't obeying the directive
+      CITY_MARKET_NORMAL_AMT in one case)
+   -- Fixed bug in AString::value() where an excessively large number
+      could be used to overflow an integer into a negative and thus
+      cause some very wierd effects (such as creating items out of
+      nothing)
+   -- Fixed a bug where a faction could get more apprentices than they
+      should be allowed.
+   -- Fixed bug in tax being a month-long order and issuing the 'tax'
+      command giving an error about work overwriting and then the unit
+      working instead of taxing.
+   -- Fixed bug where autotax didn't work if DEFAULT_WORK_ORDER was
+      disabled and the unit was submitted as part of an orderset but had
+      blank orders (only when TAX_PILLAGE_MONTHLONG was set).
+
Index: aregion.cpp
===================================================================
RCS file: /home/cvs/atlantis/aregion.cpp,v
retrieving revision 1.50.2.4
diff -u -r1.50.2.4 aregion.cpp
--- aregion.cpp	19 Oct 2002 04:03:41 -0000	1.50.2.4
+++ aregion.cpp	25 Oct 2002 15:19:30 -0000
@@ -444,8 +444,8 @@
 							}
 
 							Market * m = new Market (M_BUY, i, price, 0,
-									1000+population, 4000+population, 0,
-									50 + getrandom(50));
+									1000+population, 4000+population,
+									0, amt);
 							markets.Add(m);
 						}
 					} else {
Index: astring.cpp
===================================================================
RCS file: /home/cvs/atlantis/astring.cpp,v
retrieving revision 1.6
diff -u -r1.6 astring.cpp
--- astring.cpp	1 May 2002 19:30:15 -0000	1.6
+++ astring.cpp	6 Nov 2002 09:00:15 -0000
@@ -327,6 +327,8 @@
 	int ret = 0;
 	while ((str[place] >= '0') && (str[place] <= '9')) {
 		ret *= 10;
+		// Fix integer overflow to negative.
+		if (ret < 0) return 0;
 		ret += (str[place++] - '0');
 	}
 	return ret;
Index: game.cpp
===================================================================
RCS file: /home/cvs/atlantis/game.cpp,v
retrieving revision 1.52.2.1
diff -u -r1.52.2.1 game.cpp
--- game.cpp	14 Sep 2002 19:44:35 -0000	1.52.2.1
+++ game.cpp	13 Nov 2002 08:07:52 -0000
@@ -69,13 +69,15 @@
 			Object * o = (Object *) elem;
 			forlist(&o->units) {
 				Unit * u = (Unit *) elem;
-				if (!(u->monthorders) && !u->faction->IsNPC()) {
-					if(u->GetFlag(FLAG_AUTOTAX) &&
-					   Globals->TAX_PILLAGE_MONTH_LONG && u->Taxers()) {
-						u->taxing = TAX_AUTO;
-					} else {
-						ProcessWorkOrder(u, 0);
-					}
+				if (u->monthorders || u->faction->IsNPC() ||
+						(Globals->TAX_PILLAGE_MONTH_LONG &&
+						 u->taxing != TAX_NONE))
+					continue;
+				if(u->GetFlag(FLAG_AUTOTAX) &&
+						(Globals->TAX_PILLAGE_MONTH_LONG && u->Taxers())) {
+					u->taxing = TAX_AUTO;
+				} else {
+					if(Globals->DEFAULT_WORK_ORDER) ProcessWorkOrder(u, 0);
 				}
 			}
 		}
@@ -1488,8 +1490,7 @@
                 ParseOrders( fac->num, &file, 0 );
                 file.Close();
             }
-			if(Globals->DEFAULT_WORK_ORDER)
-				DefaultWorkOrder();
+			DefaultWorkOrder();
         }
     }
 }
Index: genrules.cpp
===================================================================
RCS file: /home/cvs/atlantis/genrules.cpp,v
retrieving revision 1.46.2.1
diff -u -r1.46.2.1 genrules.cpp
--- genrules.cpp	14 Sep 2002 19:44:36 -0000	1.46.2.1
+++ genrules.cpp	3 Nov 2002 17:30:21 -0000
@@ -77,7 +77,7 @@
 	}
 
 	f.PutStr("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 "
-			"Transitional//EN\">");
+			"Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">");
 	f.Enclose(1, "HTML");
 	f.Enclose(1, "HEAD");
 	f.PutStr("<META HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; "
Index: parseorders.cpp
===================================================================
RCS file: /home/cvs/atlantis/parseorders.cpp,v
retrieving revision 1.44
diff -u -r1.44 parseorders.cpp
--- parseorders.cpp	29 Jun 2002 01:38:44 -0000	1.44
+++ parseorders.cpp	13 Nov 2002 07:50:04 -0000
@@ -1099,6 +1099,7 @@
 
 	if(!pCheck) {
 		int m = CountMages(u->faction);
+		int a = CountApprentices(u->faction);
 
 		for(i = 0; i < NFACTYPES; i++) {
 			u->faction->type[i] = factype[i];
@@ -1114,6 +1115,16 @@
 
 			return;
 		}
+		if(a > AllowedApprentices(u->faction)) {
+			u->Error(AString("FACTION: Too many apprentices to change "
+						"to that faction type."));
+
+			for(i = 0; i < NFACTYPES; i++) {
+				u->faction->type[ i ] = oldfactype[ i ];
+			}
+
+			return;
+		}
 
 		u->faction->lastchange = TurnNumber();
 		u->faction->DefaultOrders();
@@ -2261,7 +2272,7 @@
 					break;
 			}
 			if(Globals->CITY_RENAME_COST) {
-				cost = towntype+1* Globals->CITY_RENAME_COST;
+				cost = (towntype+1)* Globals->CITY_RENAME_COST;
 			}
 			int ok = 0;
 			switch(towntype) {
Index: unit.cpp
===================================================================
RCS file: /home/cvs/atlantis/unit.cpp,v
retrieving revision 1.53.2.1
diff -u -r1.53.2.1 unit.cpp
--- unit.cpp	3 Oct 2002 19:46:55 -0000	1.53.2.1
+++ unit.cpp	13 Nov 2002 08:17:15 -0000
@@ -646,6 +646,7 @@
 	} else if(type == U_GUARDMAGE) {
 		combat = S_FIRE;
 	} else{
+		/* Set up default orders for any faction unit which submits none */
 		if(obj->region->type != R_NEXUS) {
 			if(GetFlag(FLAG_AUTOTAX) &&
 					Globals->TAX_PILLAGE_MONTH_LONG && Taxers()) {
