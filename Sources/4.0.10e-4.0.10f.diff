Index: CHANGELOG
===================================================================
RCS file: /home/cvs/atlantis/CHANGELOG,v
retrieving revision 1.106.2.6
diff -u -r1.106.2.6 CHANGELOG
--- CHANGELOG	20 Nov 2002 21:53:37 -0000	1.106.2.6
+++ CHANGELOG	1 Dec 2002 19:25:39 -0000
@@ -597,3 +597,7 @@
       disabled and the unit was submitted as part of an orderset but had
       blank orders (only when TAX_PILLAGE_MONTHLONG was set).
 
+Changes from 4.0.10e -> 4.0.10f
+--------------------------------------------------
+   -- Fixed bug in practice code where non-leader units would keep trying
+      to practice and generate errors even after they were at max level.
Index: unit.cpp
===================================================================
RCS file: /home/cvs/atlantis/unit.cpp,v
retrieving revision 1.53.2.2
diff -u -r1.53.2.2 unit.cpp
--- unit.cpp	20 Nov 2002 21:53:37 -0000	1.53.2.2
+++ unit.cpp	2 Dec 2002 05:10:23 -0000
@@ -1024,16 +1024,29 @@
 
 int Unit::Practise(int sk)
 {
-	int days, bonus, men, curlev, reqsk, reqlev;
+	int days, bonus, men, curlev, reqsk, reqlev, max;
 	unsigned int i;
 
 	bonus = Globals->SKILL_PRACTISE_AMOUNT;
 	if (practised || (bonus < 1)) return 1;
 	days = skills.GetDays(sk);
 	men = GetMen();
-	if (men < 1 || days < 1 || days >= 450 * men) return 0;
 
+	// Fix the code checking for max level so that we actually compute it
+	// correctly for non-leader units :(
+	if (men < 1 || days < 1) return 0;
+
+	max = 1000;
+	forlist (&items) {
+		Item *i = (Item *)elem;
+		if (ItemDefs[i->type].type & IT_MAN) {
+			int m = SkillMax(sk, i->type);
+			if (m < max) max = m;
+		}
+	}
 	curlev = GetRealSkill(sk);
+	if (curlev >= max) return 0;
+
 	for(i = 0; i < sizeof(SkillDefs[sk].depends)/sizeof(SkillDepend); i++) {
 		reqsk = SkillDefs[sk].depends[i].skill;
 		if (reqsk == -1) break;
